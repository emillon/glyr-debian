# Configuration for Version / versionname
configure_file (
  "config.h.in"
  "config.h"
)

SET(GENERIC_LIB_VERSION ${GLYR_VERSION_MAJOR}.${GLYR_VERSION_MINOR})
SET(GLYR_API_SOVERSION 1)

# Link libglyr as shared library
ADD_LIBRARY(glyr SHARED	${LIB_SOURCE_LOCATIONS})

# Win32 needs that socket library for libcurl
IF(WIN32)
  TARGET_LINK_LIBRARIES(glyr ${CURL_LIBRARY} ${GLIBPKG_LIBRARIES} ${SQLITE3_LIBRARIES} ws2_32) 
  SET_TARGET_PROPERTIES(glyr PROPERTIES
    OUTPUT_NAME "glyr-${GLYR_API_SOVERSION}"
    VERSION ${GENERIC_LIB_VERSION} )
ELSE(WIN32) 
  TARGET_LINK_LIBRARIES(glyr ${CURL_LIBRARY} ${GLIBPKG_LIBRARIES} ${SQLITE3_LIBRARIES} ) 
  SET_TARGET_PROPERTIES(glyr PROPERTIES
    VERSION ${GLYR_API_SOVERSION}.${GENERIC_LIB_VERSION}
    SOVERSION ${GLYR_API_SOVERSION})
ENDIF(WIN32)

# Install Files
INSTALL(FILES glyr.h    DESTINATION ${INSTALL_INC_DIR}/glyr)
INSTALL(FILES types.h   DESTINATION ${INSTALL_INC_DIR}/glyr)
INSTALL(FILES misc.h    DESTINATION ${INSTALL_INC_DIR}/glyr)
INSTALL(FILES cache.h   DESTINATION ${INSTALL_INC_DIR}/glyr)
INSTALL(FILES config.h  DESTINATION ${INSTALL_INC_DIR}/glyr)
INSTALL(FILES testing.h DESTINATION ${INSTALL_INC_DIR}/glyr)
INSTALL(TARGETS glyr LIBRARY DESTINATION ${INSTALL_LIB_DIR})
